{"version":3,"sources":["Animation.js","App.js","serviceWorker.js","index.js"],"names":["Animation","props","getRendererSize","bind","updateAnimationSize","buildAnimation","loadAnimationAssets","generateSprites","buildInteractions","showAnimation","state","isLoaded","CANVAS_SIZE","Size","ASSET","p","ANIMATION_ROOT","React","createRef","rendererSize","parentSize","PIXI_APP","renderer","PIXI","antialias","autoDensity","resolution","window","devicePixelRatio","backgroundColor","width","height","stage","interactive","ticker","sprites","frame","char","char_eye","left","right","sclera","waves","0","1","2","3","sky","this","prevProps","prevState","prevParentSize","prevLoaded","appendChild","view","stop","destroy","parentStyle","display","alignItems","justifyContent","transition","loaderParentStyle","color","style","textAlign","ref","elem","Promise","resolve","shared","add","load","loader","resources","texture","ss_char","spritesheet","textures","char_eye_sclera","WHITE","char_eye_left","char_eye_right","anchor","set","position","_STATES","_DEFAULT","_HOVER","_CLICK","_CENTER","x","y","ss_sea","wave_0","wave_1","wave_2","wave_3","on","event","target","eye","targetVector","distance","Math","sqrt","pow","trackTargetWithEye","pos","xFactor","yFactor","screenPosToCanvas","data","global","wave","_ANIMATION","value","changeInValue","movement","rotation","func","time","sin","cos","render","HIGH","addChild","start","setState","container","getScaledRect","policy","POLICY","ShowAll","resize","Component","App","setWindowSize","debounce","windowSize","innerWidth","innerHeight","addEventListener","removeEventListener","newWindowSize","prevWindowSize","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0bf6d974.chunk.js","sourcesContent":["import React from 'react';\nimport * as PIXI from 'pixi.js';\nimport { POLICY, Size, getScaledRect } from 'adaptive-scale/lib-esm';\n\nclass Animation extends React.Component {\n\n  /**\n   * @param {*} props \n   * @param {Size} props.parentSize\n   */\n  constructor(props) {\n    super(props);\n\n    this.getRendererSize = this.getRendererSize.bind(this);\n    this.updateAnimationSize = this.updateAnimationSize.bind(this);\n\n    this.buildAnimation = this.buildAnimation.bind(this);\n    this.loadAnimationAssets = this.loadAnimationAssets.bind(this);\n    this.generateSprites = this.generateSprites.bind(this);\n    this.buildInteractions = this.buildInteractions.bind(this);\n    this.showAnimation = this.showAnimation.bind(this);\n\n    this.state = {\n      isLoaded: false,\n    };\n\n    /**\n     * CANVAS_SIZE are the dimensions the original\n     * poster (and) animation were designed for.\n     * \n     * This is the size the animation is rendered\n     * to before being scaled using\n     * this.props.parentSize.\n     */\n    this.CANVAS_SIZE = new Size(3200, 2320);\n\n    /**\n     * Quick method to generate assets (images,\n     * spritesheets, fonts, et cetera) URLS.\n     * \n     * For use mostly in PIXI.Loader, e.g.:\n     * \n     *   const { ASSET } = this;\n     *   PIXI.Loader.shared\n     *     .add(ASSET('spritesheet.json'))\n     *     .add(ASSET('image.png'))\n     *     .load(onLoad);\n     */\n    this.ASSET = p => process.env.NODE_ENV === 'development' ? `/animation_assets/${p}` : `/pitching-and-moaning/animation_assets/${p}`;\n\n    /**\n     * ANIMATION_ROOT is a DOM reference to the base\n     * canvas element within which Pixi.js operates.\n     */\n    this.ANIMATION_ROOT = React.createRef();\n\n    const rendererSize = this.getRendererSize(props.parentSize, this.CANVAS_SIZE);\n    this.PIXI_APP = {\n      renderer: new PIXI.autoDetectRenderer({\n        antialias: true,\n        autoDensity: true,\n        resolution: window.devicePixelRatio,\n        /**\n         * Here I'm programmatically switching anim-\n         * ation colors based on runtime environment.\n         * \n         * A dark background makes visualizing where\n         * the stages ends easier.\n         */\n        backgroundColor: (process.env.NODE_ENV === 'development' ?\n          (0x7b7b7b) :\n          (0xffffff)\n        ),\n        width: rendererSize.width,\n        height: rendererSize.height,\n      }),\n      stage: new PIXI.Container({\n        interactive: true,\n      }),\n      ticker: new PIXI.Ticker(),\n      sprites: {\n        frame: null,\n        char: null,\n        char_eye: {\n          left: null,\n          right: null,\n          sclera: null,\n        },\n        waves: {\n          0: null,\n          1: null,\n          2: null,\n          3: null,\n        },\n        sky: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    /**\n     * Does this also chain load:\n     *   - sprites?\n     *   - interactions?\n     *   - EVENTS?!?\n     * Yes.\n     * \n     * Should it?\n     * \n     * Probably not.\n     * \n     * WARNING: Highly impure function,\n     * but that's the beauty of custom-\n     * ized software. Everything is\n     * ~~arbitrarily tied to each\n     * other~~ specifically tailored.\n     */\n    // await this.buildAnimation(); (can await if needed)\n    this.buildAnimation();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevParentSize = prevProps.parentSize;\n    const { parentSize } = this.props;\n\n    if (\n      prevParentSize.width !== parentSize.width ||\n      prevParentSize.height !== parentSize.height\n    ) {\n      this.updateAnimationSize();\n    }\n\n    const prevLoaded = prevState.isLoaded;\n    const { isLoaded } = this.state;\n    if (isLoaded && !prevLoaded) {\n      this.ANIMATION_ROOT.appendChild(this.PIXI_APP.renderer.view);\n    }\n  }\n\n  componentWillUnmount() {\n    this.PIXI_APP.ticker.stop();\n    this.PIXI_APP.renderer.destroy(true);\n  }\n\n  render() {\n    const { isLoaded } =  this.state;\n\n    const { width, height } = this.props.parentSize;\n    const parentStyle = {\n      width,\n      height,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transition: 'background-color 0.3s ease-out',\n    };\n\n    if (!isLoaded) {\n\n      const loaderParentStyle = {\n        ...parentStyle,\n        backgroundColor: 'black',\n        color: 'white',\n      }\n\n      const loaderStyle = {\n        textAlign: 'center',\n      };\n\n      return (\n        <div style={loaderParentStyle}>\n          <div style={loaderStyle}>\n            ...pitching, and moaning...\n          </div>\n        </div>\n      );\n    }\n\n    return <div style={parentStyle} ref={elem => this.ANIMATION_ROOT = elem} />;\n  }\n\n  async buildAnimation() {\n    await this.loadAnimationAssets();\n    this.generateSprites();\n    this.buildInteractions();\n    this.showAnimation();\n  }\n\n  async loadAnimationAssets() {\n    return new Promise(resolve => {\n      const { ASSET } = this;\n\n      PIXI.Loader.shared\n        .add(ASSET('frame.png'))\n        .add(ASSET('sky.png'))\n        .add(ASSET('ss_char.json'))\n        .add(ASSET('ss_sea.json'))\n        .load(resolve);\n    });\n  }\n\n  generateSprites() {\n    const { ASSET } = this;\n    const loader = PIXI.Loader.shared;\n\n    const frame = new PIXI.Sprite(loader.resources[ASSET('frame.png')].texture);\n    const sky = new PIXI.Sprite(loader.resources[ASSET('sky.png')].texture);\n\n    /**\n     * (char) David Eves himself, oh man.\n     * (char._STATES.*)\n     * \n     * I'm storing interactive information in\n     * _DEFAULT, _HOVER, and _CLICK on the\n     * sprite respectively.\n     * \n     * (so texture & position)\n     */\n    const ss_char = loader.resources[ASSET('ss_char.json')].spritesheet.textures;\n    const char = new PIXI.Sprite(ss_char['char.png']);\n    const char_eye_sclera = new PIXI.Sprite(PIXI.Texture.WHITE);\n    const char_eye_left = new PIXI.Sprite(ss_char['eye_left.png']);\n    const char_eye_right = new PIXI.Sprite(ss_char['eye_right.png']);\n    (() => {\n      char.anchor.set(0.5);\n      char.position.set(1611, 1385.50);\n      char._STATES = {\n        _DEFAULT: {\n          texture: ss_char['char.png'],\n          position: [1611, 1385.50],\n        },\n        _HOVER: {\n          texture: ss_char['char_hover.png'],\n          position: new PIXI.Point(1611, 1381.90),\n        },\n        _CLICK: {\n          texture: ss_char['char_click.png'],\n          position: new PIXI.Point(0, 0), // TODO\n        },\n      };\n  \n      /**\n       * The left and right eye store a _CENTER\n       * value that acts as the origin for mouse-\n       * tracking.\n       */\n      char_eye_left._CENTER = { x: 1545, y: 1024.50 };\n      char_eye_right._CENTER = { x: 1679.50, y: 1023.50 };\n  \n      char_eye_left.anchor.set(0.5);\n      char_eye_right.anchor.set(0.5);\n      \n      char_eye_left.position.set(char_eye_left._CENTER.x, char_eye_left._CENTER.y);\n      char_eye_right.position.set(char_eye_right._CENTER.x, char_eye_right._CENTER.y);\n\n      /**\n       * (char_eye_*) Sprites specific to\n       * character eye interaction (eyes\n       * mouse follow).\n       * \n       * _sclera is a flat white rendered\n       * below the irises, allowing the\n       * illusion of a moving eyeball that\n       * tracks user mouse/touch events.\n       */\n      char_eye_sclera.width = 221;\n      char_eye_sclera.height = 79;\n      char_eye_sclera.anchor.set(0.5); \n      char_eye_sclera.position.set(1610.50, 1023.50);\n    })();\n\n    /**\n     * wave_*\n     * \n     * Watch 'em go.\n     */\n    const ss_sea = loader.resources[ASSET('ss_sea.json')].spritesheet.textures;\n    const wave_0 = new PIXI.Sprite(ss_sea['wave_1.png']);\n    const wave_1 = new PIXI.Sprite(ss_sea['wave_2.png']);\n    const wave_2 = new PIXI.Sprite(ss_sea['wave_3.png']);\n    const wave_3 = new PIXI.Sprite(ss_sea['wave_4.png']);\n    (() => {\n      wave_0.anchor.set(0.5);\n      wave_0.position.set(2444.50, 1386.50);\n  \n      wave_1.anchor.set(0.5);\n      wave_1.position.set(823.50, 1253.50);\n  \n      wave_2.anchor.set(0.5);\n      wave_2.position.set(1686.50, 1545.50);\n  \n      wave_3.anchor.set(0.5);\n      wave_3.position.set(954, 1604);\n    })();\n\n    this.PIXI_APP.sprites = {\n      frame,\n      char,\n      char_eye: {\n        left: char_eye_left,\n        right: char_eye_right,\n        sclera: char_eye_sclera,\n      },\n      waves: {\n        0: wave_0,\n        1: wave_1,\n        2: wave_2,\n        3: wave_3,\n      },\n      sky,\n    };\n  }\n\n  buildInteractions() {\n    const { renderer, stage, sprites, ticker } = this.PIXI_APP;\n\n    /**\n     * @param {x, y} pos \n     */\n    const screenPosToCanvas = pos => {\n      const { stage } = this.PIXI_APP;\n      const { CANVAS_SIZE } = this;\n\n      const xFactor = CANVAS_SIZE.width / stage.width;\n      const yFactor = CANVAS_SIZE.height / stage.height;\n\n      /**\n       * What are matrices lmao? 🤔\n       */\n      return {\n        x: pos.x * xFactor,\n        y: pos.y * yFactor,\n      };\n    }\n\n    // TODO:\n    // check for interactions\n    // * char (hover|click)\n\n    const trackTargetWithEye = target => {\n      for (let eye in this.PIXI_APP.sprites.char_eye) {\n        if (eye === 'sclera') continue;\n\n        eye = this.PIXI_APP.sprites.char_eye[eye];\n\n        const targetVector = {\n          x: target.x - eye.x,\n          y: target.y - eye.y,\n        };\n        const distance = Math.sqrt(Math.pow(targetVector.x, 2) + Math.pow(targetVector.y, 2));\n\n        targetVector.x = targetVector.x / distance;\n        targetVector.y = targetVector.y > 1 ? targetVector.y * 2.32 / distance : targetVector.y / distance;\n\n        eye.position.set(eye._CENTER.x + (13 * targetVector.x), eye._CENTER.y + (5 * targetVector.y));\n      }\n    }\n\n    stage.interactive = true;\n    stage.on('mousemove', event => {\n      trackTargetWithEye(screenPosToCanvas(event.data.global));\n    });\n\n    /**\n     * Wave Interactions\n     * \n     * Each wave has an _ANIMATION property\n     * that stores and configures its own\n     * animated properties.\n     * \n     * _ANIMATION.func is automatically added\n     * to the main ticker (for each wave).\n     */\n    const waves = sprites.waves;\n    (() => {\n      waves[0]._ANIMATION = {\n        value: 0,\n        changeInValue: 0.0035,\n        movement: 0.23,\n        rotation: 0.0125,\n        func: time => {\n          const wave = waves[0];\n          let { value } = wave._ANIMATION;\n          if (value > PIXI.PI_2) value = 0;\n          \n          const { changeInValue, movement, rotation } = wave._ANIMATION;\n          wave.position.y += movement * Math.sin(value);\n          wave.rotation = rotation * Math.sin(value);\n  \n          wave._ANIMATION.value = value + changeInValue * time\n        },\n      };\n\n      waves[1]._ANIMATION = {\n        value: 0,\n        changeInValue: 0.0037,\n        movement: 0.1,\n        rotation: 0.0125,\n        func: time => {\n          const wave = waves[1];\n          let { value } = wave._ANIMATION;\n          if (value > PIXI.PI_2) value = 0;\n          \n          const { changeInValue, movement, rotation } = wave._ANIMATION;\n          wave.position.y += movement * Math.cos(value);\n          wave.rotation = rotation * Math.sin(value);\n  \n          wave._ANIMATION.value = value + changeInValue * time\n        },\n      };\n\n      waves[2]._ANIMATION = {\n        value: 0,\n        changeInValue: 0.0125,\n        movement: 0.3,\n        rotation: 0.0225,\n        func: time => {\n          const wave = waves[2];\n          let { value } = wave._ANIMATION;\n          if (value > PIXI.PI_2) value = 0;\n          \n          const { changeInValue, movement, rotation } = wave._ANIMATION;\n          wave.position.y += movement * Math.sin(value);\n          wave.rotation = rotation * Math.sin(value);\n  \n          wave._ANIMATION.value = value + changeInValue * time\n        },\n      };\n\n      waves[3]._ANIMATION = {\n        value: 0,\n        changeInValue: 0.0175,\n        movement: 0.2,\n        rotation: 0.0300,\n        func: time => {\n          const wave = waves[3];\n          let { value } = wave._ANIMATION;\n          if (value > PIXI.PI_2) value = 0;\n          \n          const { changeInValue, movement, rotation } = wave._ANIMATION;\n          wave.position.y += movement * Math.sin(value);\n          wave.rotation = rotation * Math.sin(value);\n  \n          wave._ANIMATION.value = value + changeInValue * time\n        },\n      };\n\n      for (let wave in waves) {\n        wave = waves[wave];\n        ticker.add(wave._ANIMATION.func);\n      }\n    })();\n\n    /**\n     * Root update -- this runs everything.\n     */\n    ticker.add(\n      () => { renderer.render(stage); },\n      PIXI.UPDATE_PRIORITY.HIGH\n    );\n  }\n\n  showAnimation() {\n    const { stage, ticker, sprites } = this.PIXI_APP;\n\n    stage.addChild(sprites.sky);\n    for (let wave in sprites.waves) {\n      wave = sprites.waves[wave];\n      stage.addChild(wave);\n    }\n    stage.addChild(sprites.char_eye.sclera);\n    stage.addChild(sprites.char_eye.left);\n    stage.addChild(sprites.char_eye.right);\n    stage.addChild(sprites.char);\n    stage.addChild(sprites.frame);\n\n    this.updateAnimationSize();\n    ticker.start();\n\n    this.setState({\n      ...this.state,\n      isLoaded: true,\n    });\n  }\n\n  getRendererSize(container=this.props.parentSize, target=this.CANVAS_SIZE) {\n    return getScaledRect({\n      container,\n      target,\n      policy: POLICY.ShowAll,\n    });\n  }\n\n  updateAnimationSize() {\n    const { renderer, stage } = this.PIXI_APP;\n    const { width, height } = this.getRendererSize();\n\n    stage.width = width;\n    stage.height = height;\n    renderer.resize(width, height);\n  }\n}\n\nexport default Animation;\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport { Size } from 'adaptive-scale/lib-esm';\nimport Animation from './Animation';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.setWindowSize = debounce(this.setWindowSize.bind(this), 125);\n\n    this.state = {\n      windowSize: new Size(window.innerWidth, window.innerHeight),\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.setWindowSize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setWindowSize);\n  }\n\n  render() {\n\n    /**\n     * The main animation component expects a\n     * parentSize prop of Size() in order to\n     * contrain itself within the viewport.\n     */\n    return <Animation parentSize={this.state.windowSize} />;\n  }\n\n  setWindowSize() {\n    /**\n     * This function is (debounced and) re-run\n     * each time the browser window changes size.\n     * \n     * Sets `this.state.windowSize` to current\n     * browser viewport size as a Size() object.\n     */\n\n    const newWindowSize = new Size(window.innerWidth, window.innerHeight);\n    const prevWindowSize = this.state.windowSize;\n\n    if (\n      newWindowSize.width === prevWindowSize.width &&\n      newWindowSize.height === prevWindowSize.height\n    ) return;\n\n    const windowSize = newWindowSize;\n    this.setState({ windowSize });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n  * Welcome to Pitching and Moaning!\n  *\n  * This React application is a promotional\n  * webpage for Eavesdrop Media's new tele-\n  * vision series: Pitching and Moaning\n  *\n  * Check it out at www.pitchingandmoaning.com\n  */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'sanitize.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (process.env.NODE_ENV)\n  switch(process.env.NODE_ENV) {\n    case 'development':\n      serviceWorker.unregister();\n      break;\n    default:\n      serviceWorker.register();\n  }\n"],"sourceRoot":""}
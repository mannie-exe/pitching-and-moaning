{"version":3,"sources":["Animation.js","App.js","serviceWorker.js","index.js"],"names":["Animation","props","generateSprites","bind","getRendererSize","updateAnimationSize","CANVAS_SIZE","Size","ANIMATION_ROOT","React","createRef","PIXI_APP","renderer","PIXI","antialias","resolution","backgroundColor","stage","interactive","ticker","animationFrame","this","shared","add","load","render","LOW","start","appendChild","view","prevProps","parentSize","width","height","stop","parentStyle","display","alignItems","justifyContent","style","ref","elem","getScaledRect","container","target","policy","POLICY","ShowAll","resize","spriteURI","sheet","resources","spritesheet","sky","textures","sea_1","sea_2","sea_3","sea_4","char_sclera","WHITE","eye_left","eye_right","char","frame","addChild","anchor","set","position","CENTER","x","y","cursor","on","e","texture","CHANGE","Math","sin","rotation","cos","Component","App","setWindowSize","debounce","state","windowSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","newWindowSize","prevWindowSize","setState","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fd3758e6.chunk.js","sourcesContent":["import React from 'react';\nimport * as PIXI from 'pixi.js';\nimport { POLICY, Size, getScaledRect } from 'adaptive-scale/lib-esm';\n\nclass Animation extends React.Component {\n\n  /**\n   * @param {*} props \n   * @param {Size} props.parentSize\n   */\n  constructor(props) {\n    super(props);\n\n    this.generateSprites = this.generateSprites.bind(this);\n    this.getRendererSize = this.getRendererSize.bind(this);\n    this.updateAnimationSize = this.updateAnimationSize.bind(this);\n\n    /**\n     * CANVAS_SIZE are the dimensions the original\n     * poster (and) animation were designed for.\n     * \n     * This is the size the animation is rendered\n     * to before being scaled using\n     * this.props.parentSize.\n     */\n    this.CANVAS_SIZE = new Size(3200, 2320);\n    \n    /**\n     * ANIMATION_ROOT is a DOM reference to the base\n     * canvas element within which Pixi.js operates.\n     */\n    this.ANIMATION_ROOT = React.createRef();\n    this.PIXI_APP = {\n      renderer: new PIXI.autoDetectRenderer({\n        antialias: true,\n        resolution: 2,\n        /**\n         * Here I'm programmatically switching anim-\n         * ation colors based on runtime environment.\n         */\n        backgroundColor: (process.env.NODE_ENV === 'development' ?\n          (0x7b7b7b) :\n          (0xffffff)\n        ),\n      }),\n      stage: new PIXI.Container({\n        interactive: true,\n      }),\n      ticker: new PIXI.Ticker(),\n      animationFrame: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { renderer, stage, ticker } = this.PIXI_APP;\n\n    /**\n     * (async)\n     * Load spritesheet and fire asset generator.\n     * \n     * TODO: consider using a downscaled sprite-\n     * sheet based on parentSize.\n     */\n    const spriteURI = 'spritesheetHQ.json';\n    PIXI.Loader.shared\n      .add(spriteURI)\n      .load(() => this.generateSprites(spriteURI));\n\n    ticker.add(\n      () => { renderer.render(stage); },\n      PIXI.UPDATE_PRIORITY.LOW\n    );\n\n    ticker.start();\n    this.ANIMATION_ROOT.appendChild(renderer.view);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.parentSize.width === this.props.parentSize.width &&\n      prevProps.parentSize.height === this.props.parentSize.height\n    ) return;\n\n    this.updateAnimationSize();\n  }\n\n  componentWillUnmount() {\n    this.PIXI_APP.ticker.stop();\n    this.PIXI_APP.renderer.stop();\n  }\n\n  render() {\n    const { width, height } = this.props.parentSize;\n    const parentStyle = {\n      width,\n      height,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    };\n\n    return <div style={parentStyle} ref={elem => this.ANIMATION_ROOT = elem} />;\n  }\n\n  getRendererSize() {\n    return getScaledRect({\n      container: this.props.parentSize,\n      target: this.CANVAS_SIZE,\n      policy: POLICY.ShowAll,\n    });\n  }\n\n  updateAnimationSize() {\n    const { renderer, stage } = this.PIXI_APP;\n    const { width, height } = this.getRendererSize();\n\n    renderer.resize(width, height);\n    stage.width = width;\n    stage.height = height;\n  }\n\n  generateSprites(spriteURI) {\n    const { stage, ticker } = this.PIXI_APP;\n    const sheet = PIXI.Loader.shared.resources[spriteURI].spritesheet;\n\n    const sky = new PIXI.Sprite(sheet.textures['sky.png']);\n    const sea_1 = new PIXI.Sprite(sheet.textures['sea_1.png']);\n    const sea_2 = new PIXI.Sprite(sheet.textures['sea_2.png']);\n    const sea_3 = new PIXI.Sprite(sheet.textures['sea_3.png']);\n    const sea_4 = new PIXI.Sprite(sheet.textures['sea_4.png']);\n    const char_sclera = new PIXI.Sprite(PIXI.Texture.WHITE);\n    const eye_left = new PIXI.Sprite(sheet.textures['eye_left.png']);\n    const eye_right = new PIXI.Sprite(sheet.textures['eye_right.png'])\n    const char = new PIXI.Sprite(sheet.textures['char.png']);\n    const frame = new PIXI.Sprite(sheet.textures['frame.png']);\n\n    stage.addChild(sky);\n    stage.addChild(sea_4);\n    stage.addChild(sea_3);\n    stage.addChild(sea_2);\n    stage.addChild(sea_1);\n    stage.addChild(char_sclera);\n    stage.addChild(eye_left);\n    stage.addChild(eye_right);\n    stage.addChild(char);\n    stage.addChild(frame);\n\n    sea_4.anchor.set(0.5);\n    sea_4.position.set(2444.50, 1386.50);\n\n    sea_3.anchor.set(0.5);\n    sea_3.position.set(823.50, 1253.50);\n\n    sea_2.anchor.set(0.5);\n    sea_2.position.set(1686.50, 1545.50);\n\n    sea_1.anchor.set(0.5);\n    sea_1.position.set(954, 1604);\n\n    char_sclera.width = 221;\n    char_sclera.height = 79;\n    char_sclera.anchor.set(0.5); \n    char_sclera.position.set(1610.50, 1023.50);\n\n    eye_left.CENTER = { x: 1545, y: 1024.50 };\n    eye_left.anchor.set(0.5);\n    eye_left.position.set(eye_left.CENTER.x, eye_left.CENTER.y);\n\n    eye_right.CENTER = { x: 1679.50, y: 1023.50 };\n    eye_right.anchor.set(0.5);\n    eye_right.position.set(eye_right.CENTER.x, eye_right.CENTER.y);\n\n    char.anchor.set(0.5);\n    char.position.set(1611, 1385.50);\n    char.cursor = 'pointer';\n    char.interactive = true;\n    char.on('mouseover', e => {\n      char.texture = sheet.textures['char_hover.png'];\n      char.anchor.set(0.5);\n      char.position.set(1611, 1381.90);\n    });\n    char.on('mouseout', e => {\n      char.texture = sheet.textures['char.png'];\n      char.anchor.set(0.5);\n      char.position.set(1611, 1385.50);\n    });\n\n    sea_1.CHANGE = 0;\n    sea_2.CHANGE = 0;\n    sea_3.CHANGE = 0;\n    sea_4.CHANGE = 0;\n    ticker.add(\n      () => {\n        if (sea_1.CHANGE > PIXI.PI_2) sea_1.CHANGE = 0;\n        if (sea_2.CHANGE > PIXI.PI_2) sea_2.CHANGE = 0;\n        if (sea_3.CHANGE > PIXI.PI_2) sea_3.CHANGE = 0;\n        if (sea_4.CHANGE > PIXI.PI_2) sea_4.CHANGE = 0;\n\n        sea_1.position.y += 0.2 * Math.sin(sea_1.CHANGE);\n        sea_1.rotation = 0.0300 * Math.sin(sea_1.CHANGE);\n        sea_2.position.y += 0.3 * Math.sin(sea_2.CHANGE);\n        sea_2.rotation = 0.0225 * Math.cos(sea_1.CHANGE);\n        sea_3.position.y += 0.1 * Math.cos(sea_3.CHANGE);\n        sea_3.rotation = 0.0125 * Math.sin(sea_1.CHANGE);\n        sea_4.position.y += 0.1 * Math.sin(sea_4.CHANGE);\n        sea_4.rotation = 0.0125 * Math.sin(sea_1.CHANGE);\n\n        sea_1.CHANGE += 0.0175;\n        sea_2.CHANGE += 0.0125;\n        sea_3.CHANGE += 0.0037;\n        sea_4.CHANGE += 0.0035;\n      },\n      PIXI.UPDATE_PRIORITY.LOW\n    )\n\n    this.updateAnimationSize();\n  }\n}\n\nexport default Animation;\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport { Size } from 'adaptive-scale/lib-esm';\nimport Animation from './Animation';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.setWindowSize = debounce(this.setWindowSize.bind(this), 125);\n\n    this.state = {\n      windowSize: new Size(window.innerWidth, window.innerHeight),\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.setWindowSize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setWindowSize);\n  }\n\n  render() {\n\n    /**\n     * The main animation component expects a\n     * parentSize prop of Size() in order to\n     * contrain itself within the viewport.\n     */\n    return <Animation parentSize={this.state.windowSize} />;\n  }\n\n  /**\n   * This function is (debounced and) re-run\n   * each time the browser window changes size.\n   * \n   * Sets `this.state.windowSize` to current\n   * browser viewport size as a Size() object.\n   */\n  setWindowSize() {\n    const newWindowSize = new Size(window.innerWidth, window.innerHeight);\n    const prevWindowSize = this.state.windowSize;\n\n    if (\n      newWindowSize.width === prevWindowSize.width &&\n      newWindowSize.height === prevWindowSize.height\n    ) return;\n\n    const windowSize = newWindowSize;\n    this.setState({ windowSize });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n  * Welcome to Pitching and Moaning!\n  *\n  * This React application is a promotional\n  * webpage for Eavesdrop Media's new tele-\n  * vision series: Pitching and Moaning\n  *\n  * Check it out at www.pitchingandmoaning.com\n  */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'sanitize.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (process.env.NODE_ENV)\n  switch(process.env.NODE_ENV) {\n    case 'development':\n      serviceWorker.unregister();\n      break;\n    default:\n      serviceWorker.register();\n  }\n"],"sourceRoot":""}